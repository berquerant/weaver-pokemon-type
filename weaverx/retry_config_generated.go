// Code generated by "goconfig -prefix Retry -option -output retry_config_generated.go -field MaxAttempts int|MaxBackoff time.Duration|InitialBackoff time.Duration"; DO NOT EDIT.

package weaverx

import "time"

type RetryConfigItem[T any] struct {
	modified     bool
	value        T
	defaultValue T
}

func (s *RetryConfigItem[T]) Set(value T) {
	s.modified = true
	s.value = value
}
func (s *RetryConfigItem[T]) Get() T {
	if s.modified {
		return s.value
	}
	return s.defaultValue
}
func (s *RetryConfigItem[T]) Default() T {
	return s.defaultValue
}
func (s *RetryConfigItem[T]) IsModified() bool {
	return s.modified
}
func NewRetryConfigItem[T any](defaultValue T) *RetryConfigItem[T] {
	return &RetryConfigItem[T]{
		defaultValue: defaultValue,
	}
}

type RetryConfig struct {
	MaxAttempts    *RetryConfigItem[int]
	MaxBackoff     *RetryConfigItem[time.Duration]
	InitialBackoff *RetryConfigItem[time.Duration]
}
type RetryConfigBuilder struct {
	maxAttempts    int
	maxBackoff     time.Duration
	initialBackoff time.Duration
}

func (s *RetryConfigBuilder) MaxAttempts(v int) *RetryConfigBuilder {
	s.maxAttempts = v
	return s
}
func (s *RetryConfigBuilder) MaxBackoff(v time.Duration) *RetryConfigBuilder {
	s.maxBackoff = v
	return s
}
func (s *RetryConfigBuilder) InitialBackoff(v time.Duration) *RetryConfigBuilder {
	s.initialBackoff = v
	return s
}
func (s *RetryConfigBuilder) Build() *RetryConfig {
	return &RetryConfig{
		MaxAttempts:    NewRetryConfigItem(s.maxAttempts),
		MaxBackoff:     NewRetryConfigItem(s.maxBackoff),
		InitialBackoff: NewRetryConfigItem(s.initialBackoff),
	}
}

func NewRetryConfigBuilder() *RetryConfigBuilder { return &RetryConfigBuilder{} }
func (s *RetryConfig) Apply(opt ...RetryConfigOption) {
	for _, x := range opt {
		x(s)
	}
}

type RetryConfigOption func(*RetryConfig)

func WithMaxAttempts(v int) RetryConfigOption {
	return func(c *RetryConfig) {
		c.MaxAttempts.Set(v)
	}
}
func WithMaxBackoff(v time.Duration) RetryConfigOption {
	return func(c *RetryConfig) {
		c.MaxBackoff.Set(v)
	}
}
func WithInitialBackoff(v time.Duration) RetryConfigOption {
	return func(c *RetryConfig) {
		c.InitialBackoff.Set(v)
	}
}
